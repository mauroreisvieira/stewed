@use "sass:math";
@use "@stewed/react/src/theme/src/styles" as theme;
@use "@stewed/react/src/typography/src/styles" as text;
@use "./variables" as *;

@include theme.scope($carousel-root) {
  display: flex;
  flex-direction: column;
  width: 100%;

  &__wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;

    .#{$carousel-root} {
      &__prev,
      &__next {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }
    }
  }

  &__content {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  &__track {
    display: flex;
    transform-style: preserve-3d;
    height: 100%;
    margin-left: theme.get-var(track-margin-left);

    @include theme.transition(transform, "slowly", "ease-in-out");

    @include theme.define-var(
      (
        slides: 1
      )
    );
  }

  &__item {
    flex-grow: 1;
    flex-shrink: 0;
    width: calc(100% / #{theme.get-var("slides")});
    height: 100%;
    backface-visibility: hidden;
  }

  &__slide {
    height: 100%;
    padding-left: theme.get-var(slide-padding-left);

    [src] {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  &__prev {
    left: $carousel-safe-margin;
  }

  &__next {
    right: $carousel-safe-margin;
  }

  &__bottom {
    position: relative;
    display: flex;
    gap: $carousel-safe-margin;
    justify-content: flex-end;
    width: 100%;
    min-height: $carousel-bottom-min-height;
    margin-top: 2px;
  }

  // Gap
  @each $key, $value in $carousel-gap {
    &--gap-#{$key} {
      @include theme.define-var(
        (
          slide-padding-left: $value,
          track-margin-left: calc($value * -1)
        )
      );
    }
  }
}
