@use "@stewed/react/src/theme/src/styles" as theme;
@use "./variables" as *;

@include theme.scope($dialog-root) {
  position: fixed;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding-block: theme.get-var(padding-block);

  @include theme.define-var(
    (
      opacity: 0,
      background-color: theme.get-color("background-elevated"),
      border-radius: theme.get-var(radius),
      padding-block: 0
    )
  );

  &__surface {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: theme.get-var(width);
    max-height: 100%;
    margin: auto;
    background-color: theme.get-var(background-color);
    border-radius: theme.get-var(border-radius);
    box-shadow: theme.get-var(shadow);
  }

  &__header {
    display: flex;
    align-items: baseline;
    justify-content: space-between;

    &__content {
      flex: 1;
    }
  }

  &__body {
    overflow-y: auto;
  }

  &__header,
  &__body,
  &__footer {
    padding-block: theme.get-var(padding-block);
    padding-inline: theme.get-var(padding-inline);
  }

  &--open {
    @include theme.define-var(
      (
        opacity: 1
      )
    );
  }

  &--scroll-in-viewport {
    overflow-y: auto;

    @include theme.define-var(
      (
        padding-block: calc(theme.get-var(safe-margin) / 2)
      )
    );

    .#{$dialog-root} {
      &__surface {
        max-height: unset;
      }

      &__body {
        overflow-y: unset;
      }
    }
  }

  // Safe Margin
  @each $key, $value in $dialog-space {
    &--safe-margin-#{$key} {
      @include theme.define-var(
        (
          safe-margin: $value
        )
      );
    }
  }

  // Padding
  @each $key, $value in $dialog-padding {
    &--padding-block-#{$key} {
      @include theme.define-var(
        (
          padding-block: #{$value}
        )
      );
    }

    &--padding-inline-#{$key} {
      @include theme.define-var(
        (
          padding-inline: #{$value}
        )
      );
    }
  }

  // Sizes
  &--xs {
    @include theme.define-var(
      (
        width: 380px
      )
    );
  }

  &--sm {
    @include theme.define-var(
      (
        width: 640px
      )
    );
  }

  &--md {
    @include theme.define-var(
      (
        width: 760px
      )
    );
  }

  &--lg {
    @include theme.define-var(
      (
        width: 1024px
      )
    );
  }

  &--xl {
    @include theme.define-var(
      (
        width: 1440px
      )
    );
  }
}
